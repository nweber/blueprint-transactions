// Generated by CoffeeScript 1.10.0
var DELIMITER, ESCAPE_CHAR, MAX_PARTS, parsePath, ref;

ref = require('./constants'), ESCAPE_CHAR = ref.ESCAPE_CHAR, DELIMITER = ref.DELIMITER, MAX_PARTS = ref.MAX_PARTS;

parsePath = function(path) {
  var buffer, currentCharacter, i, len, length, parsed, parsedWithRemovedEscapeChar, part, position, previousCharacter;
  parsed = [];
  length = path.length;
  position = 0;
  previousCharacter = "";
  buffer = "";
  while (position < length) {
    currentCharacter = path[position];
    if (currentCharacter === DELIMITER && previousCharacter !== ESCAPE_CHAR) {
      parsed.push(buffer);
      buffer = "";
    } else {
      buffer += currentCharacter;
    }
    previousCharacter = currentCharacter;
    position++;
  }
  parsed.push(buffer);
  if (parsed.length > MAX_PARTS) {
    throw new Error("Path is longer than " + MAX_PARTS + " parts.");
  }
  parsedWithRemovedEscapeChar = [];
  for (i = 0, len = parsed.length; i < len; i++) {
    part = parsed[i];
    parsedWithRemovedEscapeChar.push(part.replace(new RegExp('\\\\:', "g"), ":"));
  }
  return parsedWithRemovedEscapeChar;
};

module.exports = parsePath;
